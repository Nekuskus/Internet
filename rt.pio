; wysy≈Çanie na standardowych pinach

.program transfer
tx:
	out null, 2
	set x, 9
	nop
	nop
	set pins, 0
	pull
	jmp tx1
txloop:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
tx1:
	out pins, 3
	jmp x-- txloop
	
	jmp tx

.program receive

rx:
	set x, 9
	jmp rx1 [4]
rxloop:
	nop [7]
rx1:
	in pins, 3
	jmp x-- rxloop

	push
	jmp rx
	
% c-sdk {
	static inline void transfer_program_init(PIO pio, uint sm, uint offset, uint pin) {
		pio_sm_config c = transfer_program_get_default_config(offset);	
		sm_config_set_clkdiv(&c, 25);
		sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);
		sm_config_set_out_pins(&c, pin, 3);
		sm_config_set_set_pins(&c, pin, 3);
		//true: output, false: input
		pio_sm_set_consecutive_pindirs(pio, sm, pin, 3, true);
		
		sm_config_set_out_special(&c, true, false, pin);
		sm_config_set_out_special(&c, true, false, pin+1);
		sm_config_set_out_special(&c, true, false, pin+2);
		
		pio_gpio_init(pio, pin);
		pio_gpio_init(pio, pin + 1);
		pio_gpio_init(pio, pin + 2);
		pio_sm_init(pio, sm, offset, &c);
		pio_sm_set_enabled(pio, sm, true);
	}
	
	static inline void receive_program_init(PIO pio, uint sm, uint offset, uint pin) {
		pio_sm_config c = receive_program_get_default_config(offset);	
		sm_config_set_clkdiv(&c, 25);
		sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_RX);
		sm_config_set_in_pins(&c, pin);
		sm_config_set_in_pins(&c, pin+1);
		sm_config_set_in_pins(&c, pin+2);
		
		//true: output, false: input
		pio_sm_set_consecutive_pindirs(pio, sm, pin, 3, false);
		
		pio_gpio_init(pio, pin);
		pio_gpio_init(pio, pin + 1);
		pio_gpio_init(pio, pin + 2);
		pio_sm_init(pio, sm, offset, &c);
		pio_sm_set_enabled(pio, sm, true);
	}
%}